AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Discord Bot Lambda (Serverless)

Globals:
  Function:
    Timeout: 10
    Runtime: python3.12
    Architectures:
      - x86_64

Resources:
  # --- Frontend Lambda for Discord interactions ---
  DiscordBotFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/discord_bot/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "secretsmanager:GetSecretValue"
                - "sqs:SendMessage"
              Resource: 
                - !Sub "arn:aws:secretsmanager:ap-southeast-1:${AWS::AccountId}:secret:discord_keys-*"
                - !Sub "arn:aws:secretsmanager:ap-southeast-1:${AWS::AccountId}:secret:supabase_keys-*"
                - !GetAtt SlashCommandQueue.Arn
      Environment:
        Variables:
          SLASH_COMMAND_QUEUE_URL: !Ref SlashCommandQueue
      Events:
        DiscordInteractions:
          Type: Api
          Properties:
            Path: /interactions
            Method: post

  # --- Generic SQS Queue for background processing ---
  SlashCommandQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: slash-command-queue

  # --- Worker Lambda triggered by SQS (routes commands) ---
  SlashCommandWorkerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/discord_bot/
      Handler: slash_command_worker.lambda_handler
      Runtime: python3.12
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "secretsmanager:GetSecretValue"
              Resource:
                - !Sub "arn:aws:secretsmanager:ap-southeast-1:${AWS::AccountId}:secret:discord_keys-*"
                - !Sub "arn:aws:secretsmanager:ap-southeast-1:${AWS::AccountId}:secret:supabase_keys-*"
            
            - Effect: "Allow"
              Action:
                - "secretsmanager:GetSecretValue"
                - "secretsmanager:CreateSecret"
                - "secretsmanager:UpdateSecret"
                - "secretsmanager:ReplicateSecretToRegions"
              Resource:
                - !Sub "arn:aws:secretsmanager:ap-southeast-1:${AWS::AccountId}:secret:torn_director_api_keys-*"
      Events:
        SlashCommandQueueEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt SlashCommandQueue.Arn
            BatchSize: 1

  # --- CRON jobs for populating the DB ---
  PopulateDirectorEducationCron:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/cron/
      Handler: populate_director_education.lambda_handler
      Runtime: python3.12
      Timeout: 30
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "secretsmanager:GetSecretValue"
              Resource:
                - !Sub "arn:aws:secretsmanager:ap-southeast-1:${AWS::AccountId}:secret:discord_keys-*"
                - !Sub "arn:aws:secretsmanager:ap-southeast-1:${AWS::AccountId}:secret:supabase_keys-*"
                - !Sub "arn:aws:secretsmanager:ap-southeast-1:${AWS::AccountId}:secret:torn_director_api_keys-*"
      Events:
        DailySchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 17 * * ? *)
            Name: DailyDirectorEducationJob
            Description: "Runs PopulateDirectorEducationCron once daily at 17:00 UTC"
            Enabled: true

  PopulateDirectorStockBlocksCron:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/cron/
      Handler: populate_director_stock_blocks.lambda_handler
      Runtime: python3.12
      Timeout: 30
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "secretsmanager:GetSecretValue"
              Resource:
                - !Sub "arn:aws:secretsmanager:ap-southeast-1:${AWS::AccountId}:secret:discord_keys-*"
                - !Sub "arn:aws:secretsmanager:ap-southeast-1:${AWS::AccountId}:secret:supabase_keys-*"
                - !Sub "arn:aws:secretsmanager:ap-southeast-1:${AWS::AccountId}:secret:torn_director_api_keys-*"
      Events:
        DailySchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 17 * * ? *)
            Name: DailyDirectorStockBlocksJob
            Description: "Runs DirectorStockBlocksCron once daily at 17:00 UTC"
            Enabled: true

  PopulateEmployeesCron:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/cron/
      Handler: populate_employees.lambda_handler
      Runtime: python3.12
      Timeout: 30
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "secretsmanager:GetSecretValue"
              Resource:
                - !Sub "arn:aws:secretsmanager:ap-southeast-1:${AWS::AccountId}:secret:discord_keys-*"
                - !Sub "arn:aws:secretsmanager:ap-southeast-1:${AWS::AccountId}:secret:supabase_keys-*"
                - !Sub "arn:aws:secretsmanager:ap-southeast-1:${AWS::AccountId}:secret:torn_director_api_keys-*"
      Events:
        DailySchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 17 * * ? *)
            Name: DailyEmployeesJob
            Description: "Runs PopulateEmployeesCron once daily at 17:00 UTC"
            Enabled: true

  DailyReportEmployeesCron:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/cron/
      Handler: daily_report_employees.lambda_handler
      Runtime: python3.12
      Timeout: 30
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "secretsmanager:GetSecretValue"
              Resource:
                - !Sub "arn:aws:secretsmanager:ap-southeast-1:${AWS::AccountId}:secret:discord_keys-*"
                - !Sub "arn:aws:secretsmanager:ap-southeast-1:${AWS::AccountId}:secret:supabase_keys-*"
                - !Sub "arn:aws:secretsmanager:ap-southeast-1:${AWS::AccountId}:secret:torn_director_api_keys-*"
      Events:
        DailySchedule:
          Type: Schedule
          Properties:
            Schedule: cron(0 17 * * ? *)
            Name: DailyReportEmployeesJob
            Description: "Runs DailyReportEmployeesCron once daily at 17:00 UTC"
            Enabled: true

Outputs:
  DiscordApi:
    Description: "API Gateway endpoint URL for Prod stage for Discord interactions"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.${AWS::URLSuffix}/Prod/interactions"
    
  DiscordBotFunction:
    Description: "Lambda Function ARN"
    Value: !GetAtt DiscordBotFunction.Arn

  DiscordBotFunctionIamRole:
    Description: "IAM Role for Lambda function"
    Value: !GetAtt DiscordBotFunctionRole.Arn

  SlashCommandQueueUrl:
    Description: "URL of the SQS queue for slash command processing"
    Value: !Ref SlashCommandQueue

  SlashCommandQueueArn:
    Description: "ARN of the SQS queue for slash command processing"
    Value: !GetAtt SlashCommandQueue.Arn

  PopulateDirectorEducationCronFunction:
    Description: "Lambda function ARN for daily director education cron job"
    Value: !GetAtt PopulateDirectorEducationCron.Arn
    
  PopulateDirectorStockBlocksCronFunction:
    Description: "Lambda function ARN for daily director stock blocks cron job"
    Value: !GetAtt PopulateDirectorStockBlocksCron.Arn

  PopulateEmployeesCronFunction:
    Description: "Lambda function ARN for daily director stock blocks cron job"
    Value: !GetAtt PopulateEmployeesCron.Arn

  DailyReportEmployeesCronFunction:
    Description: "Lambda function ARN for daily report cron job"
    Value: !GetAtt DailyReportEmployeesCron.Arn

  PopulateDirectorEducationCronFunctionName:
    Description: "Lambda function name"
    Value: !Ref PopulateDirectorEducationCron

  PopulateDirectorStockBlocksCronFunctionName:
    Description: "Lambda function name"
    Value: !Ref PopulateDirectorStockBlocksCron

  PopulateEmployeesCronFunctionName:
    Description: "Lambda function name"
    Value: !Ref PopulateEmployeesCron